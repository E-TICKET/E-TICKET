2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Categorie [UPGRADE]: select categorie0_.NUMCATEGORIE as NUMCATEG1_0_0_, categorie0_.NOMCATEGORIE as NOMCATEG2_0_0_, categorie0_.NBCATEGORIE as NBCATEGO3_0_0_ from CATEGORIE categorie0_ where categorie0_.NUMCATEGORIE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Categorie [UPGRADE_NOWAIT]: select categorie0_.NUMCATEGORIE as NUMCATEG1_0_0_, categorie0_.NOMCATEGORIE as NOMCATEG2_0_0_, categorie0_.NBCATEGORIE as NBCATEGO3_0_0_ from CATEGORIE categorie0_ where categorie0_.NUMCATEGORIE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Categorie [FORCE]: select categorie0_.NUMCATEGORIE as NUMCATEG1_0_0_, categorie0_.NOMCATEGORIE as NOMCATEG2_0_0_, categorie0_.NBCATEGORIE as NBCATEGO3_0_0_ from CATEGORIE categorie0_ where categorie0_.NUMCATEGORIE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Categorie [PESSIMISTIC_READ]: select categorie0_.NUMCATEGORIE as NUMCATEG1_0_0_, categorie0_.NOMCATEGORIE as NOMCATEG2_0_0_, categorie0_.NBCATEGORIE as NBCATEGO3_0_0_ from CATEGORIE categorie0_ where categorie0_.NUMCATEGORIE=? lock in share mode
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Categorie [PESSIMISTIC_WRITE]: select categorie0_.NUMCATEGORIE as NUMCATEG1_0_0_, categorie0_.NOMCATEGORIE as NOMCATEG2_0_0_, categorie0_.NBCATEGORIE as NBCATEGO3_0_0_ from CATEGORIE categorie0_ where categorie0_.NUMCATEGORIE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Categorie [PESSIMISTIC_FORCE_INCREMENT]: select categorie0_.NUMCATEGORIE as NUMCATEG1_0_0_, categorie0_.NOMCATEGORIE as NOMCATEG2_0_0_, categorie0_.NBCATEGORIE as NBCATEGO3_0_0_ from CATEGORIE categorie0_ where categorie0_.NUMCATEGORIE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_MERGE on entity model.Categorie: select categorie0_.NUMCATEGORIE as NUMCATEG1_0_0_, categorie0_.NOMCATEGORIE as NOMCATEG2_0_0_, categorie0_.NBCATEGORIE as NBCATEGO3_0_0_ from CATEGORIE categorie0_ where categorie0_.NUMCATEGORIE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_REFRESH on entity model.Categorie: select categorie0_.NUMCATEGORIE as NUMCATEG1_0_0_, categorie0_.NOMCATEGORIE as NOMCATEG2_0_0_, categorie0_.NBCATEGORIE as NBCATEGO3_0_0_ from CATEGORIE categorie0_ where categorie0_.NUMCATEGORIE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Date_Ev [NONE]: select date_ev0_.NUMDATE as NUMDATE5_0_, date_ev0_.DATEDEBUT as DATEDEBUT5_0_, date_ev0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date_ev0_ where date_ev0_.NUMDATE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Date_Ev [READ]: select date_ev0_.NUMDATE as NUMDATE5_0_, date_ev0_.DATEDEBUT as DATEDEBUT5_0_, date_ev0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date_ev0_ where date_ev0_.NUMDATE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Date_Ev [UPGRADE]: select date_ev0_.NUMDATE as NUMDATE5_0_, date_ev0_.DATEDEBUT as DATEDEBUT5_0_, date_ev0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date_ev0_ where date_ev0_.NUMDATE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Date_Ev [UPGRADE_NOWAIT]: select date_ev0_.NUMDATE as NUMDATE5_0_, date_ev0_.DATEDEBUT as DATEDEBUT5_0_, date_ev0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date_ev0_ where date_ev0_.NUMDATE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Date_Ev [FORCE]: select date_ev0_.NUMDATE as NUMDATE5_0_, date_ev0_.DATEDEBUT as DATEDEBUT5_0_, date_ev0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date_ev0_ where date_ev0_.NUMDATE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Date_Ev [PESSIMISTIC_READ]: select date_ev0_.NUMDATE as NUMDATE5_0_, date_ev0_.DATEDEBUT as DATEDEBUT5_0_, date_ev0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date_ev0_ where date_ev0_.NUMDATE=? lock in share mode
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Date_Ev [PESSIMISTIC_WRITE]: select date_ev0_.NUMDATE as NUMDATE5_0_, date_ev0_.DATEDEBUT as DATEDEBUT5_0_, date_ev0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date_ev0_ where date_ev0_.NUMDATE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Date_Ev [PESSIMISTIC_FORCE_INCREMENT]: select date_ev0_.NUMDATE as NUMDATE5_0_, date_ev0_.DATEDEBUT as DATEDEBUT5_0_, date_ev0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date_ev0_ where date_ev0_.NUMDATE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_MERGE on entity model.Date_Ev: select date_ev0_.NUMDATE as NUMDATE5_0_, date_ev0_.DATEDEBUT as DATEDEBUT5_0_, date_ev0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date_ev0_ where date_ev0_.NUMDATE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_REFRESH on entity model.Date_Ev: select date_ev0_.NUMDATE as NUMDATE5_0_, date_ev0_.DATEDEBUT as DATEDEBUT5_0_, date_ev0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date_ev0_ where date_ev0_.NUMDATE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Facture [NONE]: select facture0_.NUMFACTURE as NUMFACTURE9_1_, facture0_.DATEFACTURE as DATEFACT2_9_1_, facture0_.DATEPAIEMENT as DATEPAIE3_9_1_, facture0_.MONTANTFACTURE as MONTANTF4_9_1_, facture0_.NUM_CMD as NUM5_9_1_, commande1_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande1_.DATECOMMANDE as DATECOMM2_4_0_ from FACTURE facture0_ left outer join COMMANDE commande1_ on facture0_.NUM_CMD=commande1_.NUMCOMMANDE where facture0_.NUMFACTURE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Facture [READ]: select facture0_.NUMFACTURE as NUMFACTURE9_1_, facture0_.DATEFACTURE as DATEFACT2_9_1_, facture0_.DATEPAIEMENT as DATEPAIE3_9_1_, facture0_.MONTANTFACTURE as MONTANTF4_9_1_, facture0_.NUM_CMD as NUM5_9_1_, commande1_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande1_.DATECOMMANDE as DATECOMM2_4_0_ from FACTURE facture0_ left outer join COMMANDE commande1_ on facture0_.NUM_CMD=commande1_.NUMCOMMANDE where facture0_.NUMFACTURE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Facture [UPGRADE]: select facture0_.NUMFACTURE as NUMFACTURE9_0_, facture0_.DATEFACTURE as DATEFACT2_9_0_, facture0_.DATEPAIEMENT as DATEPAIE3_9_0_, facture0_.MONTANTFACTURE as MONTANTF4_9_0_, facture0_.NUM_CMD as NUM5_9_0_ from FACTURE facture0_ where facture0_.NUMFACTURE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Facture [UPGRADE_NOWAIT]: select facture0_.NUMFACTURE as NUMFACTURE9_0_, facture0_.DATEFACTURE as DATEFACT2_9_0_, facture0_.DATEPAIEMENT as DATEPAIE3_9_0_, facture0_.MONTANTFACTURE as MONTANTF4_9_0_, facture0_.NUM_CMD as NUM5_9_0_ from FACTURE facture0_ where facture0_.NUMFACTURE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Facture [FORCE]: select facture0_.NUMFACTURE as NUMFACTURE9_0_, facture0_.DATEFACTURE as DATEFACT2_9_0_, facture0_.DATEPAIEMENT as DATEPAIE3_9_0_, facture0_.MONTANTFACTURE as MONTANTF4_9_0_, facture0_.NUM_CMD as NUM5_9_0_ from FACTURE facture0_ where facture0_.NUMFACTURE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Facture [PESSIMISTIC_READ]: select facture0_.NUMFACTURE as NUMFACTURE9_0_, facture0_.DATEFACTURE as DATEFACT2_9_0_, facture0_.DATEPAIEMENT as DATEPAIE3_9_0_, facture0_.MONTANTFACTURE as MONTANTF4_9_0_, facture0_.NUM_CMD as NUM5_9_0_ from FACTURE facture0_ where facture0_.NUMFACTURE=? lock in share mode
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Facture [PESSIMISTIC_WRITE]: select facture0_.NUMFACTURE as NUMFACTURE9_0_, facture0_.DATEFACTURE as DATEFACT2_9_0_, facture0_.DATEPAIEMENT as DATEPAIE3_9_0_, facture0_.MONTANTFACTURE as MONTANTF4_9_0_, facture0_.NUM_CMD as NUM5_9_0_ from FACTURE facture0_ where facture0_.NUMFACTURE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.NUMFACTURE as NUMFACTURE9_0_, facture0_.DATEFACTURE as DATEFACT2_9_0_, facture0_.DATEPAIEMENT as DATEPAIE3_9_0_, facture0_.MONTANTFACTURE as MONTANTF4_9_0_, facture0_.NUM_CMD as NUM5_9_0_ from FACTURE facture0_ where facture0_.NUMFACTURE=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_MERGE on entity model.Facture: select facture0_.NUMFACTURE as NUMFACTURE9_0_, facture0_.DATEFACTURE as DATEFACT2_9_0_, facture0_.DATEPAIEMENT as DATEPAIE3_9_0_, facture0_.MONTANTFACTURE as MONTANTF4_9_0_, facture0_.NUM_CMD as NUM5_9_0_ from FACTURE facture0_ where facture0_.NUMFACTURE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_REFRESH on entity model.Facture: select facture0_.NUMFACTURE as NUMFACTURE9_0_, facture0_.DATEFACTURE as DATEFACT2_9_0_, facture0_.DATEPAIEMENT as DATEPAIE3_9_0_, facture0_.MONTANTFACTURE as MONTANTF4_9_0_, facture0_.NUM_CMD as NUM5_9_0_ from FACTURE facture0_ where facture0_.NUMFACTURE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.TypeEvenement [NONE]: select typeevenem0_.NUMTYPEEVENEMENT as NUMTYPEE1_10_0_, typeevenem0_.LIBELLETYPEEVENEMENTT as LIBELLET2_10_0_, typeevenem0_.NBRTYPE as NBRTYPE10_0_ from TYPEEVENEMENT typeevenem0_ where typeevenem0_.NUMTYPEEVENEMENT=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.TypeEvenement [READ]: select typeevenem0_.NUMTYPEEVENEMENT as NUMTYPEE1_10_0_, typeevenem0_.LIBELLETYPEEVENEMENTT as LIBELLET2_10_0_, typeevenem0_.NBRTYPE as NBRTYPE10_0_ from TYPEEVENEMENT typeevenem0_ where typeevenem0_.NUMTYPEEVENEMENT=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.TypeEvenement [UPGRADE]: select typeevenem0_.NUMTYPEEVENEMENT as NUMTYPEE1_10_0_, typeevenem0_.LIBELLETYPEEVENEMENTT as LIBELLET2_10_0_, typeevenem0_.NBRTYPE as NBRTYPE10_0_ from TYPEEVENEMENT typeevenem0_ where typeevenem0_.NUMTYPEEVENEMENT=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.TypeEvenement [UPGRADE_NOWAIT]: select typeevenem0_.NUMTYPEEVENEMENT as NUMTYPEE1_10_0_, typeevenem0_.LIBELLETYPEEVENEMENTT as LIBELLET2_10_0_, typeevenem0_.NBRTYPE as NBRTYPE10_0_ from TYPEEVENEMENT typeevenem0_ where typeevenem0_.NUMTYPEEVENEMENT=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.TypeEvenement [FORCE]: select typeevenem0_.NUMTYPEEVENEMENT as NUMTYPEE1_10_0_, typeevenem0_.LIBELLETYPEEVENEMENTT as LIBELLET2_10_0_, typeevenem0_.NBRTYPE as NBRTYPE10_0_ from TYPEEVENEMENT typeevenem0_ where typeevenem0_.NUMTYPEEVENEMENT=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.TypeEvenement [PESSIMISTIC_READ]: select typeevenem0_.NUMTYPEEVENEMENT as NUMTYPEE1_10_0_, typeevenem0_.LIBELLETYPEEVENEMENTT as LIBELLET2_10_0_, typeevenem0_.NBRTYPE as NBRTYPE10_0_ from TYPEEVENEMENT typeevenem0_ where typeevenem0_.NUMTYPEEVENEMENT=? lock in share mode
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.TypeEvenement [PESSIMISTIC_WRITE]: select typeevenem0_.NUMTYPEEVENEMENT as NUMTYPEE1_10_0_, typeevenem0_.LIBELLETYPEEVENEMENTT as LIBELLET2_10_0_, typeevenem0_.NBRTYPE as NBRTYPE10_0_ from TYPEEVENEMENT typeevenem0_ where typeevenem0_.NUMTYPEEVENEMENT=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.TypeEvenement [PESSIMISTIC_FORCE_INCREMENT]: select typeevenem0_.NUMTYPEEVENEMENT as NUMTYPEE1_10_0_, typeevenem0_.LIBELLETYPEEVENEMENTT as LIBELLET2_10_0_, typeevenem0_.NBRTYPE as NBRTYPE10_0_ from TYPEEVENEMENT typeevenem0_ where typeevenem0_.NUMTYPEEVENEMENT=? for update
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_MERGE on entity model.TypeEvenement: select typeevenem0_.NUMTYPEEVENEMENT as NUMTYPEE1_10_0_, typeevenem0_.LIBELLETYPEEVENEMENTT as LIBELLET2_10_0_, typeevenem0_.NBRTYPE as NBRTYPE10_0_ from TYPEEVENEMENT typeevenem0_ where typeevenem0_.NUMTYPEEVENEMENT=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_REFRESH on entity model.TypeEvenement: select typeevenem0_.NUMTYPEEVENEMENT as NUMTYPEE1_10_0_, typeevenem0_.LIBELLETYPEEVENEMENTT as LIBELLET2_10_0_, typeevenem0_.NBRTYPE as NBRTYPE10_0_ from TYPEEVENEMENT typeevenem0_ where typeevenem0_.NUMTYPEEVENEMENT=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Commande [NONE]: select commande0_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande0_.DATECOMMANDE as DATECOMM2_4_0_ from COMMANDE commande0_ where commande0_.NUMCOMMANDE=?
2015-03-18 11:44:29,430 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Commande [READ]: select commande0_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande0_.DATECOMMANDE as DATECOMM2_4_0_ from COMMANDE commande0_ where commande0_.NUMCOMMANDE=?
2015-03-18 11:44:29,446 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Commande [UPGRADE]: select commande0_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande0_.DATECOMMANDE as DATECOMM2_4_0_ from COMMANDE commande0_ where commande0_.NUMCOMMANDE=? for update
2015-03-18 11:44:29,446 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Commande [UPGRADE_NOWAIT]: select commande0_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande0_.DATECOMMANDE as DATECOMM2_4_0_ from COMMANDE commande0_ where commande0_.NUMCOMMANDE=? for update
2015-03-18 11:44:29,446 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Commande [FORCE]: select commande0_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande0_.DATECOMMANDE as DATECOMM2_4_0_ from COMMANDE commande0_ where commande0_.NUMCOMMANDE=? for update
2015-03-18 11:44:29,446 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Commande [PESSIMISTIC_READ]: select commande0_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande0_.DATECOMMANDE as DATECOMM2_4_0_ from COMMANDE commande0_ where commande0_.NUMCOMMANDE=? lock in share mode
2015-03-18 11:44:29,446 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Commande [PESSIMISTIC_WRITE]: select commande0_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande0_.DATECOMMANDE as DATECOMM2_4_0_ from COMMANDE commande0_ where commande0_.NUMCOMMANDE=? for update
2015-03-18 11:44:29,446 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity model.Commande [PESSIMISTIC_FORCE_INCREMENT]: select commande0_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande0_.DATECOMMANDE as DATECOMM2_4_0_ from COMMANDE commande0_ where commande0_.NUMCOMMANDE=? for update
2015-03-18 11:44:29,446 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_MERGE on entity model.Commande: select commande0_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande0_.DATECOMMANDE as DATECOMM2_4_0_ from COMMANDE commande0_ where commande0_.NUMCOMMANDE=?
2015-03-18 11:44:29,446 DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_REFRESH on entity model.Commande: select commande0_.NUMCOMMANDE as NUMCOMMA1_4_0_, commande0_.DATECOMMANDE as DATECOMM2_4_0_ from COMMANDE commande0_ where commande0_.NUMCOMMANDE=?
2015-03-18 11:44:29,446 DEBUG main org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many model.Date_Ev.evenement: select evenement0_.NUMDATE_Ev as NUMDATE5_5_1_, evenement0_.NUMEVENEMENT as NUMEVENE1_1_, evenement0_.NUMEVENEMENT as NUMEVENE1_1_0_, evenement0_.NOMEVENEMENT as NOMEVENE2_1_0_, evenement0_.QTESTOCK as QTESTOCK1_0_, evenement0_.PRIXMIN as PRIXMIN1_0_ from EVENEMENT evenement0_ where evenement0_.NUMDATE_Ev=?
2015-03-18 11:44:29,446 DEBUG main org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many model.Seance.date: select date0_.NUMSEANCE as NUMSEANCE8_1_, date0_.NUMDATE as NUMDATE1_, date0_.NUMDATE as NUMDATE5_0_, date0_.DATEDEBUT as DATEDEBUT5_0_, date0_.DATEFIN as DATEFIN5_0_ from DATE_Ev date0_ where date0_.NUMSEANCE=?
2015-03-18 11:44:29,462 DEBUG main org.hibernate.impl.SessionFactoryObjectFactory - initializing class SessionFactoryObjectFactory
2015-03-18 11:44:29,462 DEBUG main org.hibernate.impl.SessionFactoryObjectFactory - registered: 8aaa83fa4c2c7c08014c2c7c0c860000 (unnamed)
2015-03-18 11:44:29,462 INFO main org.hibernate.impl.SessionFactoryObjectFactory - Not binding factory to JNDI, no JNDI name configured
2015-03-18 11:44:29,462 DEBUG main org.hibernate.impl.SessionFactoryImpl - instantiated session factory
2015-03-18 11:44:29,462 DEBUG main org.hibernate.cfg.Configuration - processing extends queue
2015-03-18 11:44:29,462 DEBUG main org.hibernate.cfg.Configuration - processing collection mappings
2015-03-18 11:44:29,462 DEBUG main org.hibernate.cfg.Configuration - processing native query and ResultSetMapping mappings
2015-03-18 11:44:29,462 DEBUG main org.hibernate.cfg.Configuration - processing association property references
2015-03-18 11:44:29,462 DEBUG main org.hibernate.cfg.Configuration - processing foreign key constraints
2015-03-18 11:44:29,462 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Seance
2015-03-18 11:44:29,462 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Date_Ev
2015-03-18 11:44:29,462 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Evenement
2015-03-18 11:44:29,462 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Categorie
2015-03-18 11:44:29,462 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Commande
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Evenement
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - processing extends queue
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - processing collection mappings
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - processing native query and ResultSetMapping mappings
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - processing association property references
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - processing foreign key constraints
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Seance
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Date_Ev
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Evenement
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Categorie
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Commande
2015-03-18 11:44:29,477 DEBUG main org.hibernate.cfg.Configuration - resolving reference to class: model.Evenement
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-03-18 11:44:29,477 INFO main org.hibernate.tool.hbm2ddl.SchemaExport - Running hbm2ddl schema export
2015-03-18 11:44:29,477 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - import file not found: /import.sql
2015-03-18 11:44:29,477 INFO main org.hibernate.tool.hbm2ddl.SchemaExport - exporting generated schema to database
2015-03-18 11:44:29,477 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:29,493 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table DATE_Ev drop foreign key FK80D33F02288C82CD
2015-03-18 11:44:29,540 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - Unsuccessful: alter table DATE_Ev drop foreign key FK80D33F02288C82CD
2015-03-18 11:44:29,540 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - Table 'etick.date_ev' doesn't exist
2015-03-18 11:44:29,540 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table EVENEMENT drop foreign key FKA72F5A49AA714DB9
2015-03-18 11:44:29,649 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - Unsuccessful: alter table EVENEMENT drop foreign key FKA72F5A49AA714DB9
2015-03-18 11:44:29,649 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - Can't DROP 'FKA72F5A49AA714DB9'; check that column/key exists
2015-03-18 11:44:29,649 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table EVENEMENTCATEGORIE drop foreign key FK7BD418EEF349CF67
2015-03-18 11:44:29,774 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table EVENEMENTCATEGORIE drop foreign key FK7BD418EEABC4FD03
2015-03-18 11:44:29,868 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table FACTURE drop foreign key FKE9B6D35C71D70CC0
2015-03-18 11:44:30,024 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table LIGNECOMMANDE drop foreign key FKBB8A071BA2485AB4
2015-03-18 11:44:30,118 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists CATEGORIE
2015-03-18 11:44:30,337 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists CLIENT
2015-03-18 11:44:30,540 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists COMMANDE
2015-03-18 11:44:30,743 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists DATE_Ev
2015-03-18 11:44:30,743 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists EVENEMENT
2015-03-18 11:44:30,915 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists EVENEMENTCATEGORIE
2015-03-18 11:44:31,182 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists FACTURE
2015-03-18 11:44:31,370 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists LIGNECOMMANDE
2015-03-18 11:44:31,573 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists PANIER
2015-03-18 11:44:31,807 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists SEANCE
2015-03-18 11:44:31,932 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - Unsuccessful: drop table if exists SEANCE
2015-03-18 11:44:31,932 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - Cannot delete or update a parent row: a foreign key constraint fails
2015-03-18 11:44:31,932 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - drop table if exists TYPEEVENEMENT
2015-03-18 11:44:31,932 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table CATEGORIE (NUMCATEGORIE integer not null, NOMCATEGORIE varchar(255), NBCATEGORIE integer, primary key (NUMCATEGORIE))
2015-03-18 11:44:32,370 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table CLIENT (NUMCLIENT integer not null, NOMCLIENT varchar(255), PRENOMCLIENT varchar(255), ADRESSECLIENT varchar(255), TELCLIENT varchar(255), LOGINCLIENT varchar(255), PASSCLIENT varchar(255), primary key (NUMCLIENT))
2015-03-18 11:44:32,667 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table COMMANDE (NUMCOMMANDE integer not null, DATECOMMANDE datetime, primary key (NUMCOMMANDE))
2015-03-18 11:44:32,966 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table DATE_Ev (NUMDATE integer not null, DATEDEBUT datetime, DATEFIN datetime, NUMSEANCE integer, primary key (NUMDATE))
2015-03-18 11:44:33,325 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table EVENEMENT (NUMEVENEMENT integer not null, NOMEVENEMENT varchar(255), QTESTOCK integer, PRIXMIN integer, NUMDATE_Ev integer, primary key (NUMEVENEMENT))
2015-03-18 11:44:33,638 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table EVENEMENTCATEGORIE (NumEvenementCategorie integer not null, Prix integer, NumCategorie integer, NumEvenement integer, primary key (NumEvenementCategorie))
2015-03-18 11:44:33,930 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table FACTURE (NUMFACTURE integer not null, DATEFACTURE datetime, DATEPAIEMENT datetime, MONTANTFACTURE integer, NUM_CMD integer, primary key (NUMFACTURE))
2015-03-18 11:44:34,224 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table LIGNECOMMANDE (QTECOMMANDEE integer not null, NUM_EVENEMENT integer, primary key (QTECOMMANDEE))
2015-03-18 11:44:34,537 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table PANIER (NUMPANIER integer not null, primary key (NUMPANIER))
2015-03-18 11:44:34,865 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table SEANCE (NUMSEANCE integer not null, HEUREDEBUT time, HEUREFIN time, primary key (NUMSEANCE))
2015-03-18 11:44:35,055 ERROR main org.hibernate.tool.hbm2ddl.SchemaExport - Unsuccessful: create table SEANCE (NUMSEANCE integer not null, HEUREDEBUT time, HEUREFIN time, primary key (NUMSEANCE))
2015-03-18 11:44:35,055 ERROR main org.hibernate.tool.hbm2ddl.SchemaExport - Table 'seance' already exists
2015-03-18 11:44:35,055 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - create table TYPEEVENEMENT (NUMTYPEEVENEMENT integer not null, LIBELLETYPEEVENEMENTT varchar(255), NBRTYPE integer, primary key (NUMTYPEEVENEMENT))
2015-03-18 11:44:35,461 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table DATE_Ev add index FK80D33F02288C82CD (NUMSEANCE), add constraint FK80D33F02288C82CD foreign key (NUMSEANCE) references SEANCE (NUMSEANCE)
2015-03-18 11:44:36,414 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table EVENEMENT add index FKA72F5A49AA714DB9 (NUMDATE_Ev), add constraint FKA72F5A49AA714DB9 foreign key (NUMDATE_Ev) references DATE_Ev (NUMDATE)
2015-03-18 11:44:37,651 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table EVENEMENTCATEGORIE add index FK7BD418EEF349CF67 (NumEvenement), add constraint FK7BD418EEF349CF67 foreign key (NumEvenement) references EVENEMENT (NUMEVENEMENT)
2015-03-18 11:44:38,651 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table EVENEMENTCATEGORIE add index FK7BD418EEABC4FD03 (NumCategorie), add constraint FK7BD418EEABC4FD03 foreign key (NumCategorie) references CATEGORIE (NUMCATEGORIE)
2015-03-18 11:44:39,514 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table FACTURE add index FKE9B6D35C71D70CC0 (NUM_CMD), add constraint FKE9B6D35C71D70CC0 foreign key (NUM_CMD) references COMMANDE (NUMCOMMANDE)
2015-03-18 11:44:40,391 DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - alter table LIGNECOMMANDE add index FKBB8A071BA2485AB4 (NUM_EVENEMENT), add constraint FKBB8A071BA2485AB4 foreign key (NUM_EVENEMENT) references EVENEMENT (NUMEVENEMENT)
2015-03-18 11:44:41,221 INFO main org.hibernate.tool.hbm2ddl.SchemaExport - schema export complete
2015-03-18 11:44:41,221 DEBUG main org.hibernate.impl.SessionFactoryImpl - Checking 0 named HQL queries
2015-03-18 11:44:41,221 DEBUG main org.hibernate.impl.SessionFactoryImpl - Checking 0 named SQL queries
2015-03-18 11:44:41,221 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'sessionFactory'
2015-03-18 11:44:41,221 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'categorieService'
2015-03-18 11:44:41,221 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'categorieService'
2015-03-18 11:44:41,221 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'categorieService' to allow for resolving potential circular references
2015-03-18 11:44:41,221 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'categorieDao'
2015-03-18 11:44:41,221 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'categorieDao'
2015-03-18 11:44:41,221 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'categorieDao' to allow for resolving potential circular references
2015-03-18 11:44:41,221 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'categorieDao'
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'categorieDao'
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'categorieService'
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'categorieDao'
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'evenementService'
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'evenementService'
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'evenementService' to allow for resolving potential circular references
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'evenementDao'
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'evenementDao'
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'evenementDao' to allow for resolving potential circular references
2015-03-18 11:44:41,252 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'evenementDao'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'evenementDao'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'evenementService'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'evenementDao'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'evenementcategorieService'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'evenementcategorieService'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'evenementcategorieService' to allow for resolving potential circular references
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'evenementcategorieDao'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'evenementcategorieDao'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'evenementcategorieDao' to allow for resolving potential circular references
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'evenementcategorieDao'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'evenementcategorieDao'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'evenementcategorieService'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'evenementcategorieDao'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientService'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'clientService'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'clientService' to allow for resolving potential circular references
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientDao'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'clientDao'
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'clientDao' to allow for resolving potential circular references
2015-03-18 11:44:41,268 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'clientDao'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'clientDao'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'clientService'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'clientDao'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'commandeService'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'commandeService'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'commandeService' to allow for resolving potential circular references
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'commandeDao'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'commandeDao'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'commandeDao' to allow for resolving potential circular references
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'commandeDao'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'commandeDao'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'commandeService'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'commandeDao'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dateService'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'dateService'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'dateService' to allow for resolving potential circular references
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'DateDao'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'DateDao'
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'DateDao' to allow for resolving potential circular references
2015-03-18 11:44:41,284 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'DateDao'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'DateDao'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'dateService'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'DateDao'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'panierService'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'panierService'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'panierService' to allow for resolving potential circular references
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'PanierDao'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'PanierDao'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'PanierDao' to allow for resolving potential circular references
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'PanierDao'
2015-03-18 11:44:41,299 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'PanierDao'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'panierService'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'PanierDao'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'ligneCommandeService'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'ligneCommandeService'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'ligneCommandeService' to allow for resolving potential circular references
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'ligneCommandeDao'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'ligneCommandeDao'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'ligneCommandeDao' to allow for resolving potential circular references
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'ligneCommandeDao'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'ligneCommandeDao'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'ligneCommandeService'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'ligneCommandeDao'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'SeanceService'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'SeanceService'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'SeanceService' to allow for resolving potential circular references
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'SeanceDao'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'SeanceDao'
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'SeanceDao' to allow for resolving potential circular references
2015-03-18 11:44:41,315 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'SeanceDao'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'SeanceDao'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'SeanceService'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'SeanceDao'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'FactureService'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'FactureService'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'FactureService' to allow for resolving potential circular references
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'FactureDao'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'FactureDao'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'FactureDao' to allow for resolving potential circular references
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'FactureDao'
2015-03-18 11:44:41,330 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'FactureDao'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'FactureService'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'FactureDao'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'TypeEvenementService'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'TypeEvenementService'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'TypeEvenementService' to allow for resolving potential circular references
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'TypeEvenementDao'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'TypeEvenementDao'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'TypeEvenementDao' to allow for resolving potential circular references
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'TypeEvenementDao'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'TypeEvenementDao'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'TypeEvenementService'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'TypeEvenementDao'
2015-03-18 11:44:41,346 DEBUG main org.springframework.context.support.ClassPathXmlApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@372e71a4]
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
2015-03-18 11:44:41,346 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'categorieService'
2015-03-18 11:44:41,440 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:41,502 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754814
2015-03-18 11:44:41,518 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(NUMCATEGORIE) from CATEGORIE
2015-03-18 11:44:41,518 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:41,518 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:41,518 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:41,518 DEBUG main org.hibernate.SQL - select max(NUMCATEGORIE) from CATEGORIE
2015-03-18 11:44:41,566 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 1
2015-03-18 11:44:41,566 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:41,566 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:41,597 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:41,597 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:41,597 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:41,597 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:41,597 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-03-18 11:44:41,597 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:41,597 DEBUG main org.hibernate.pretty.Printer - model.Categorie{nbCategorie=4, numCategorie=1, nomCategorie=C, evenementCategorie=null}
2015-03-18 11:44:41,597 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:41,597 DEBUG main org.hibernate.SQL - insert into CATEGORIE (NOMCATEGORIE, NBCATEGORIE, NUMCATEGORIE) values (?, ?, ?)
2015-03-18 11:44:41,597 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:41,644 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:41,644 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:41,644 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:41,644 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2015-03-18 11:44:41,644 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'evenementService'
2015-03-18 11:44:41,644 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:41,644 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754816
2015-03-18 11:44:41,644 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(NUMEVENEMENT) from EVENEMENT
2015-03-18 11:44:41,644 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:41,644 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:41,644 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:41,659 DEBUG main org.hibernate.SQL - select max(NUMEVENEMENT) from EVENEMENT
2015-03-18 11:44:41,659 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 1
2015-03-18 11:44:41,659 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:41,659 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:41,659 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:41,659 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:41,659 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:41,659 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:41,659 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-03-18 11:44:41,659 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:41,659 DEBUG main org.hibernate.pretty.Printer - model.Evenement{qteStock=20, nomEvenement=Match, prixMin=25, numEvenement=1}
2015-03-18 11:44:41,659 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:41,659 DEBUG main org.hibernate.SQL - insert into EVENEMENT (NOMEVENEMENT, QTESTOCK, PRIXMIN, NUMEVENEMENT) values (?, ?, ?, ?)
2015-03-18 11:44:41,659 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:41,722 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:41,722 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:41,722 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:41,722 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2015-03-18 11:44:41,722 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'evenementcategorieService'
2015-03-18 11:44:41,722 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:41,722 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754817
2015-03-18 11:44:41,722 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(NumEvenementCategorie) from EVENEMENTCATEGORIE
2015-03-18 11:44:41,722 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:41,722 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:41,722 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:41,737 DEBUG main org.hibernate.SQL - select max(NumEvenementCategorie) from EVENEMENTCATEGORIE
2015-03-18 11:44:41,737 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 1
2015-03-18 11:44:41,737 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:41,737 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:41,737 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:41,737 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:41,737 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:41,737 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:41,737 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-03-18 11:44:41,737 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:41,737 DEBUG main org.hibernate.pretty.Printer - model.EvenementCategorie{evenementB=model.Evenement#1, categorieA=model.Categorie#1, prix=123, numEvenementCategorie=1}
2015-03-18 11:44:41,737 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:41,737 DEBUG main org.hibernate.SQL - insert into EVENEMENTCATEGORIE (Prix, NumCategorie, NumEvenement, NumEvenementCategorie) values (?, ?, ?, ?)
2015-03-18 11:44:41,737 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:41,769 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:41,769 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:41,769 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:41,769 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2015-03-18 11:44:41,769 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'clientService'
2015-03-18 11:44:41,769 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:41,769 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754817
2015-03-18 11:44:41,769 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(NUMCLIENT) from CLIENT
2015-03-18 11:44:41,769 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:41,769 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:41,769 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:41,784 DEBUG main org.hibernate.SQL - select max(NUMCLIENT) from CLIENT
2015-03-18 11:44:41,784 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 1
2015-03-18 11:44:41,784 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:41,784 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:41,784 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:41,784 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:41,784 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:41,784 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:41,784 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-03-18 11:44:41,784 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:41,784 DEBUG main org.hibernate.pretty.Printer - model.Client{adresseClient=null, prenomClient=null, nomClient=Client, numClient=1, passClient=null, telClient=null, loginClient=null}
2015-03-18 11:44:41,784 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:41,784 DEBUG main org.hibernate.SQL - insert into CLIENT (NOMCLIENT, PRENOMCLIENT, ADRESSECLIENT, TELCLIENT, LOGINCLIENT, PASSCLIENT, NUMCLIENT) values (?, ?, ?, ?, ?, ?, ?)
2015-03-18 11:44:41,784 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:41,847 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:41,847 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:41,847 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:41,847 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2015-03-18 11:44:41,847 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dateService'
2015-03-18 11:44:41,847 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:41,847 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754818
2015-03-18 11:44:41,847 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(NUMDATE) from DATE_Ev
2015-03-18 11:44:41,847 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:41,847 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:41,847 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:41,847 DEBUG main org.hibernate.SQL - select max(NUMDATE) from DATE_Ev
2015-03-18 11:44:41,862 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 1
2015-03-18 11:44:41,862 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:41,862 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:41,894 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:41,894 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:41,894 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:41,894 DEBUG main org.hibernate.engine.Collections - Collection found: [model.Date_Ev.evenement#1], was: [<unreferenced>] (initialized)
2015-03-18 11:44:41,894 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:41,894 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2015-03-18 11:44:41,894 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:41,956 DEBUG main org.hibernate.pretty.Printer - model.Date_Ev{numDate=1, dateFin=null, evenement=[], dateDebut=3905-02-15 00:00:00}
2015-03-18 11:44:41,956 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:41,956 DEBUG main org.hibernate.SQL - insert into DATE_Ev (DATEDEBUT, DATEFIN, NUMDATE) values (?, ?, ?)
2015-03-18 11:44:41,956 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:41,987 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:41,987 DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Inserting collection: [model.Date_Ev.evenement#1]
2015-03-18 11:44:41,987 DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - collection was empty
2015-03-18 11:44:42,003 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:42,003 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:42,003 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2015-03-18 11:44:42,019 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'commandeService'
2015-03-18 11:44:42,019 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:42,019 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754820
2015-03-18 11:44:42,019 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(NUMCOMMANDE) from COMMANDE
2015-03-18 11:44:42,019 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,019 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:42,019 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:42,019 DEBUG main org.hibernate.SQL - select max(NUMCOMMANDE) from COMMANDE
2015-03-18 11:44:42,019 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 1
2015-03-18 11:44:42,019 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,019 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:42,019 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:42,019 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:42,019 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:42,019 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:42,019 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-03-18 11:44:42,019 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:42,019 DEBUG main org.hibernate.pretty.Printer - model.Commande{numCommande=1, dateCommande=3905-02-15 00:00:00}
2015-03-18 11:44:42,019 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,019 DEBUG main org.hibernate.SQL - insert into COMMANDE (DATECOMMANDE, NUMCOMMANDE) values (?, ?)
2015-03-18 11:44:42,019 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:42,065 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,065 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:42,065 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:42,065 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2015-03-18 11:44:42,065 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'panierService'
2015-03-18 11:44:42,065 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:42,065 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754820
2015-03-18 11:44:42,065 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(NUMPANIER) from PANIER
2015-03-18 11:44:42,065 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,065 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:42,065 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:42,081 DEBUG main org.hibernate.SQL - select max(NUMPANIER) from PANIER
2015-03-18 11:44:42,081 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 1
2015-03-18 11:44:42,081 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,081 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:42,081 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:42,081 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:42,081 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:42,081 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:42,081 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-03-18 11:44:42,081 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:42,081 DEBUG main org.hibernate.pretty.Printer - model.Panier{ligneCommande=null, numPanier=1}
2015-03-18 11:44:42,081 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,081 DEBUG main org.hibernate.SQL - insert into PANIER (NUMPANIER) values (?)
2015-03-18 11:44:42,081 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:42,112 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,128 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:42,128 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:42,128 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2015-03-18 11:44:42,128 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'ligneCommandeService'
2015-03-18 11:44:42,128 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:42,128 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754821
2015-03-18 11:44:42,128 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(QTECOMMANDEE) from LIGNECOMMANDE
2015-03-18 11:44:42,128 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,128 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:42,128 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:42,128 DEBUG main org.hibernate.SQL - select max(QTECOMMANDEE) from LIGNECOMMANDE
2015-03-18 11:44:42,128 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 1
2015-03-18 11:44:42,128 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,128 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:42,128 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:42,128 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:42,128 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:42,128 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:42,128 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-03-18 11:44:42,128 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:42,128 DEBUG main org.hibernate.pretty.Printer - model.LigneCommande{qteCommandee=1, evenement=null, panier=null}
2015-03-18 11:44:42,128 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,128 DEBUG main org.hibernate.SQL - insert into LIGNECOMMANDE (NUM_EVENEMENT, QTECOMMANDEE) values (?, ?)
2015-03-18 11:44:42,128 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:42,191 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,191 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:42,191 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:42,191 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2015-03-18 11:44:42,191 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'SeanceService'
2015-03-18 11:44:42,191 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:42,191 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754821
2015-03-18 11:44:42,191 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(NUMSEANCE) from SEANCE
2015-03-18 11:44:42,191 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,191 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:42,191 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:42,191 DEBUG main org.hibernate.SQL - select max(NUMSEANCE) from SEANCE
2015-03-18 11:44:42,191 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 2
2015-03-18 11:44:42,191 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,191 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:42,191 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:42,191 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:42,191 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:42,191 DEBUG main org.hibernate.engine.Collections - Collection found: [model.Seance.date#2], was: [<unreferenced>] (initialized)
2015-03-18 11:44:42,191 DEBUG main org.hibernate.engine.Collections - Found collection with unloaded owner: [<unreferenced>]
2015-03-18 11:44:42,191 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:42,191 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 2 collections
2015-03-18 11:44:42,191 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:42,191 DEBUG main org.hibernate.pretty.Printer - model.Seance{heureFin=null, numSeance=2, heureDebut=null, date=[]}
2015-03-18 11:44:42,191 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,191 DEBUG main org.hibernate.SQL - insert into SEANCE (HEUREDEBUT, HEUREFIN, NUMSEANCE) values (?, ?, ?)
2015-03-18 11:44:42,191 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:42,269 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,269 DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - Inserting collection: [model.Seance.date#2]
2015-03-18 11:44:42,269 DEBUG main org.hibernate.persister.collection.AbstractCollectionPersister - collection was empty
2015-03-18 11:44:42,269 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:42,269 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:42,269 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2015-03-18 11:44:42,269 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'FactureService'
2015-03-18 11:44:42,269 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:42,269 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754822
2015-03-18 11:44:42,269 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(NUMFACTURE) from FACTURE
2015-03-18 11:44:42,269 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,269 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:42,269 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:42,269 DEBUG main org.hibernate.SQL - select max(NUMFACTURE) from FACTURE
2015-03-18 11:44:42,269 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 1
2015-03-18 11:44:42,269 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,269 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:42,269 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:42,269 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:42,269 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:42,269 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:42,269 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-03-18 11:44:42,269 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:42,269 DEBUG main org.hibernate.pretty.Printer - model.Facture{dateFacture=null, cmd=null, datePaiement=null, numFacture=1, montantFacture=0}
2015-03-18 11:44:42,269 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,269 DEBUG main org.hibernate.SQL - insert into FACTURE (DATEFACTURE, DATEPAIEMENT, MONTANTFACTURE, NUM_CMD, NUMFACTURE) values (?, ?, ?, ?, ?)
2015-03-18 11:44:42,269 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:42,331 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,331 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:42,331 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:42,331 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
2015-03-18 11:44:42,331 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'TypeEvenementService'
2015-03-18 11:44:42,331 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Opening Hibernate Session
2015-03-18 11:44:42,331 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 14266754823
2015-03-18 11:44:42,331 DEBUG main org.hibernate.id.IncrementGenerator - fetching initial value: select max(NUMTYPEEVENEMENT) from TYPEEVENEMENT
2015-03-18 11:44:42,331 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,331 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2015-03-18 11:44:42,331 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localHost/Etick]
2015-03-18 11:44:42,347 DEBUG main org.hibernate.SQL - select max(NUMTYPEEVENEMENT) from TYPEEVENEMENT
2015-03-18 11:44:42,347 DEBUG main org.hibernate.id.IncrementGenerator - first free id: 1
2015-03-18 11:44:42,347 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,347 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
2015-03-18 11:44:42,347 DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Eagerly flushing Hibernate session
2015-03-18 11:44:42,347 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2015-03-18 11:44:42,347 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2015-03-18 11:44:42,347 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2015-03-18 11:44:42,347 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-03-18 11:44:42,347 DEBUG main org.hibernate.pretty.Printer - listing entities:
2015-03-18 11:44:42,347 DEBUG main org.hibernate.pretty.Printer - model.TypeEvenement{libelleTypeEvenementt=null, numTypeEvenement=1, nbrType=0}
2015-03-18 11:44:42,347 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-03-18 11:44:42,347 DEBUG main org.hibernate.SQL - insert into TYPEEVENEMENT (LIBELLETYPEEVENEMENTT, NBRTYPE, NUMTYPEEVENEMENT) values (?, ?, ?)
2015-03-18 11:44:42,347 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2015-03-18 11:44:42,394 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-03-18 11:44:42,394 DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
2015-03-18 11:44:42,394 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-03-18 11:44:42,394 DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
